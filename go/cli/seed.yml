---
version: "0"

variables:
  arguments:
    docker_compose:
      build:
        dockerfile: Dockerfile
        args:
          go_version: 1.19
          debian_version: 11-slim
      working_directory: /workspace
      mountpoints:
        - src: !Var .common.arguments.vscode_devcontainer.source_path
          dst: !Var arguments.docker_compose.working_directory
  let:
    common:
      service_name:
        prefix: !Const collection.name
        base:
          !Join
          - "_"
          -
            - !Var let.common.service_name.prefix
            - "base"
        development:
          !Join
          - "_"
          -
            - !Var let.common.service_name.prefix
            - "dev"
        production: !Var let.common.service_name.prefix
    docker_compose:
      build:
        context:
          !Sub
          - "./docker/${ServiceName}"
          - ServiceName: !Var let.common.service_name.production
        args:
          go_version:
            !Join
            - "="
            -
              - "GO_VERSION"
              - !Var arguments.docker_compose.build.args.go_version
          debian_version:
            !Join
            - "="
            -
              - "DEBIAN_VERSION"
              - !Var arguments.docker_compose.build.args.debian_version
      mount_setting:
        container_working_directory:
          !Sub
          - "${HostMountPoint}:${ContainerMountPoint}:cached"
          - HostMountPoint: !Var arguments.docker_compose.mountpoints[0].src
            ContainerMountPoint: !Var arguments.docker_compose.mountpoints[0].dst

configs:
  vscode_devcontainer:
    customizations:
      vscode:
        extensions:
          - golang.go
  docker_compose:
    services:
      !Var let.common.service_name.base:
        build: &go_build_config
          context: !Var let.docker_compose.build.context
          dockerfile: !Var arguments.docker_compose.build.dockerfile
          args:
            - !Var let.docker_compose.build.args.go_version
            - !Var let.docker_compose.build.args.debian_version
        working_dir: !Var arguments.docker_compose.working_directory
      !Var let.common.service_name.development:
        build:
          <<: *go_build_config
          target: base
        working_dir: !Var arguments.docker_compose.working_directory
        volumes:
          - !Var let.docker_compose.mount_setting.container_working_directory
      !Var let.common.service_name.production:
        build:
          <<: *go_build_config
          target: prod
        working_dir: !Var arguments.docker_compose.working_directory

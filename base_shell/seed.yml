---
version: "0"

variables:
  arguments:
    vscode_devcontainer:
      working_directory: /workspace
      user_name: vscode
    docker_compose:
      build:
        dockerfile: Dockerfile
      host_mountpoint_path: ".."
  let:
    common:
      service_name: !Const collection.name
      container_terminal_cwd: !Var .common.arguments.vscode_devcontainer.source_path
      home_dir:
        !If
        - !Equals
          - !Var arguments.vscode_devcontainer.user_name
          - "root"
        - "/root"
        - !Sub
          - "/home/${UserName}"
          - UserName: !Var arguments.vscode_devcontainer.user_name
    vscode_devcontainer:
      terminal_absolute_cwd:
        !Join
        - "/"
        -
          - "${containerWorkspaceFolder}"
          - !Var let.common.container_terminal_cwd
    docker_compose:
      build:
        context:
          !Sub
          - "./docker/${ServiceName}"
          - ServiceName: !Var let.common.service_name
      mount_setting:
        container_working_directory:
          !Sub
          - "${HostMountPath}:${ContainerWorkingDirectory}:cached"
          - HostMountPath: !Var arguments.docker_compose.host_mountpoint_path
            ContainerWorkingDirectory: !Var arguments.vscode_devcontainer.working_directory
        vscode_extension:
          !If
          - !Defined .common.arguments.docker_compose.vscode_extension_volumes.normal
          - !Sub
            - "${ExtensionVolumeName}:${HomeDirectory}/.vscode-server/extensions"
            - ExtensionVolumeName: !Var .common.arguments.docker_compose.vscode_extension_volumes.normal
              HomeDirectory: !Var let.common.home_dir
          - null
        vscode_insider_extension:
          !If
          - !Defined .common.arguments.docker_compose.vscode_extension_volumes.normal
          - !Sub
            - "${InsiderExtensionVolumeName}:${HomeDirectory}/.vscode-insider-server/extensions"
            - InsiderExtensionVolumeName: !Var .common.arguments.docker_compose.vscode_extension_volumes.insider
              HomeDirectory: !Var let.common.home_dir
          - null

configs:
  vscode_devcontainer:
    workspaceFolder: !Var arguments.vscode_devcontainer.working_directory
    remoteEnv:
      LOCAL_WORKSPACE_FOLDER: ${localWorkspaceFolder}
      CONTAINER_WORKSPACE_FOLDER: ${containerWorkspaceFolder}
      PATH: ${containerWorkspaceFolder}/.devcontainer/bin/user:${containerEnv:PATH}
      HISTFILE: ${containerWorkspaceFolder}/.devcontainer/.zhistory
    customizations:
      vscode:
        settings:
          terminal.integrated.cwd: !Var let.vscode_devcontainer.terminal_absolute_cwd
          git-graph.maxDepthOfRepoSearch: 1
        extensions:
          - ms-azuretools.vscode-docker
          - wmaurer.vscode-jumpy
          - oderwat.indent-rainbow
          - mosapride.zenkaku
          - christian-kohler.path-intellisense
          - streetsidesoftware.code-spell-checker
          - eamodio.gitlens
          - mhutchie.git-graph
          - yzhang.markdown-all-in-one
    remoteUser: !Var arguments.vscode_devcontainer.user_name
  docker_compose:
    version: "3.7"
    services:
      !Var let.common.service_name:
        build:
          context: !Var let.docker_compose.build.context
          dockerfile: !Var arguments.docker_compose.build.dockerfile
        volumes:
          # Forwards the local Docker socket to the container.
          - /var/run/docker.sock:/var/run/docker-host.sock
          - !Var let.docker_compose.mount_setting.container_working_directory
          - !Var? let.docker_compose.mount_setting.vscode_extension
          - !Var? let.docker_compose.mount_setting.vscode_insider_extension
        # Overrides default command so things don't shut down after the process ends.
        entrypoint: /usr/local/share/docker-init.sh
        command: sleep infinity
        # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
        # cap_add:
        #  - SYS_PTRACE
        # security_opt:
        #   - seccomp:unconfined
        # Uncomment the next line to use a non-root user for all processes.
        user: !Var arguments.vscode_devcontainer.user_name
        # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
        # (Adding the "ports" property to this file will not forward from a Codespace.)
